# Escenario B ‚Äì Replicaci√≥n Snapshot en SQL Server (Localhost)

## üéØ Objetivo

Implementar una replicaci√≥n **snapshot** desde una base de datos `CentroMedicoDB` en la instancia principal (`D4VHOST`) hacia una base hom√≥nima en una instancia secundaria (`D4VHOST\INSTANCIA_R1`), utilizando SQL Server Management Studio.

---

## üèóÔ∏è Infraestructura

| Rol         | Servidor                | Base de datos      | Tipo de conexi√≥n |
|-------------|--------------------------|---------------------|------------------|
| Publicador  | `D4VHOST`               | CentroMedicoDB     | Snapshot         |
| Suscriptor  | `D4VHOST\INSTANCIA_R1`  | CentroMedicoDB     | Localhost        |

---

## ‚öôÔ∏è Pasos realizados

### 1. Crear la base de datos `CentroMedicoDB` en ambas instancias

> Incluye tablas como `Clientes`, `Medicos`, `CentrosMedicos`, etc.

---

### 2. Configurar el distribuidor (distribution)

- Validar que exista la base `distribution`
- Asociarla con el servidor publicador `D4VHOST`

---

### 3. Crear publicaci√≥n Snapshot

- Seleccionar `CentroMedicoDB` como base de publicaci√≥n
- Seleccionar las tablas a replicar: `Clientes`, `Medicos`, `CentrosMedicos`
- Configurar seguridad del agente de snapshot
- Activar la opci√≥n de generar snapshot inmediatamente

---

### 4. Crear la suscripci√≥n

- Conectarse al suscriptor `D4VHOST\INSTANCIA_R1`
- Seleccionar `CentroMedicoDB` como base destino
- Elegir ejecuci√≥n continua del agente
- Configurar seguridad del agente de distribuci√≥n
- Inicializar inmediatamente

---

### 5. Verificar ejecuci√≥n del Snapshot Agent

- Confirmar que el snapshot se gener√≥ al 100‚ÄØ%
- Asegurar que est√© disponible para el suscriptor

---

### 6. Validar replicaci√≥n

- Insertar datos en la tabla `Clientes` desde `D4VHOST`
- Confirmar que se reflejen autom√°ticamente en `D4VHOST\INSTANCIA_R1`

---

## ‚úÖ Resultado

La replicaci√≥n **snapshot** se estableci√≥ correctamente, permitiendo que los datos iniciales se distribuyan desde el publicador al suscriptor. Las modificaciones posteriores requieren nuevos snapshots.

---

## üß© Consideraciones

- Snapshot replica todo el contenido en bloques, no en tiempo real.
- Ideal para datos que no cambian con frecuencia.
- La sincronizaci√≥n no es autom√°tica ante cada cambio, requiere regenerar snapshot.

